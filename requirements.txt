#This is a list of all dependencies needed for the trading bot:
1.python-binance : sudo yum install python3-devel : pip install python-binance : Ref : https://github.com/sammchardy/python-binance

2.TA-lib
#This will be useful later as library was installed in compilation mode on my VM. (If you installed via rpm or apt this might not be revelant
PATH="$PATH:/sbin" ldconfig -n /usr/lib64
----------------------------------------------------------------------
Libraries have been installed in:
   /usr/lib64

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the `-LLIBDIR'
flag during linking and do at least one of the following:
   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
     during execution
   - add LIBDIR to the `LD_RUN_PATH' environment variable
     during linking
   - use the `-Wl,--rpath -Wl,LIBDIR' linker flag
   - have your system administrator add LIBDIR to `/etc/ld.so.conf'

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.

Installed using guide : https://github.com/mrjbq7/ta-lib#dependencies

#These two ones are simple enough
3.numpy
4.websocket_client

#Note that I have used python3.7 installed via compillation + using a user  'python' with custom env to load configs.
alias pip3='python3.7 -m pip'   <--- Should be in bashrc

Ref: Guide to install python3.7 via compillation : https://tecadmin.net/install-python-3-7-on-centos/

pip3 list --> List installed libraries

Error [ModuleNotFoundError: No module named 'websocket']
#Resolution: Before importing websocket you must make sure that Python is reading the correct library folder (This error may happen if you installed python co                          mpilation. Long story short: Below is the code to fix this issue: (Please adapt to your env)

-------------------------------------------------------------------------------------
import sys
import os

base_dir = os.path.dirname(__file__) or '/home/python'
print ('Base directory:', base_dir)

package_dir_a = os.path.join(base_dir, '.local/lib/python3.7/site-packages')
sys.path.insert(0, package_dir_a)

print('Path:', package_dir_a)
-------------------------------------------------------------------------------------
#Here is where I found the answer: https://pymotw.com/2/sys/imports.html
#Quote "The search path for modules is managed as a Python list saved in sys.path. The default contents of the path include the directory of the script used t                          o start the application and the current working directory."
